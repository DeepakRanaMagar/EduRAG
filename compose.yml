services:
    db:
        container_name: db
        # image: postgres:17.5
        build:
            context: .
            dockerfile: Dockerfile.pgvector
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
        env_file:
            - .env
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - internal_network

    redis:
        container_name: redis
        image: redis:8.0.2-alpine
        expose:
            - 6379
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - internal_network

    web:
        container_name: web
        build:
            context: .
        volumes:
            - .:/app
        ports:
            - "8000:8000"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - internal_network
        entrypoint: ./entrypoint.sh --dev=true

    streamlit:
        container_name: streamlit
        build:
            context: .
        volumes:
            - .:/app
        ports:
            - "8501:8501"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - internal_network
        entrypoint: ["streamlit", "run", "playground.py", "--server.address", "0.0.0.0", "--server.port", "8501", "--server.headless", "true"]

    nginx:
        container_name: nginx
        image: nginx:latest
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "80:80"
        depends_on:
            - web
            - streamlit
        networks:
            - internal_network
networks:
    internal_network:
        driver: bridge
